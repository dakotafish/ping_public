# Generated by Django 3.1 on 2020-11-28 23:43

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('sp', '0010_assertionattribute_tokenquery_tokenstring'),
    ]

    operations = [
        migrations.CreateModel(
            name='PrivateKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.TextField()),
                ('key_info', models.TextField(blank=True, null=True)),
                ('expiration_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='tokenquery',
            name='destination',
        ),
        migrations.RemoveField(
            model_name='tokenquery',
            name='query_parameters',
        ),
        migrations.RemoveField(
            model_name='tokenstring',
            name='destination',
        ),
        migrations.RemoveField(
            model_name='attribute',
            name='attribute_name',
        ),
        migrations.RemoveField(
            model_name='attribute',
            name='attribute_value',
        ),
        migrations.RemoveField(
            model_name='destination',
            name='data_store',
        ),
        migrations.RemoveField(
            model_name='destination',
            name='destination_endpoint',
        ),
        migrations.AddField(
            model_name='attribute',
            name='saml_attribute_name',
            field=models.CharField(blank=True, help_text='The name of the attribute received in the SAML', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='attribute',
            name='token_attribute_value',
            field=models.CharField(blank=True, help_text='The value to add to the token that is passed to the application.', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='destination',
            name='token_location',
            field=models.CharField(choices=[('COOKIE', 'Send the token as a Cookie'), ('QUERY_STRING', 'Send the token as a Query String')], default='QUERY_STRING', max_length=50),
        ),
        migrations.AddField(
            model_name='destination',
            name='token_name',
            field=models.CharField(default='1', max_length=20),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='destination',
            name='token_password',
            field=models.CharField(default='bfEnrol1', max_length=100),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='relaystate',
            name='data_store',
            field=models.CharField(default='default', max_length=100),
        ),
        migrations.AddField(
            model_name='relaystate',
            name='destination_endpoint',
            field=models.CharField(default='https://someurl.com/uri', max_length=200),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='relaystate',
            name='pattern_type',
            field=models.CharField(choices=[('SIMPLE', 'Simple URL Match. (The asterisk * is the only special character.'), ('REGEX', 'Python Regular Expression Match.')], default='SIMPLE', max_length=50),
        ),
        migrations.AlterField(
            model_name='attribute',
            name='attribute_type',
            field=models.CharField(choices=[('ASSERTION', 'ASSERTION - Take a value from a SAML Attribute and add it to the token.'), ('STRING', 'STRING - Add a static string value to the token.'), ('QUERY', 'QUERY - Use the SAML Attributes to run a query. Add the query result to the token.')], default='ASSERTION', max_length=50),
        ),
        migrations.AlterField(
            model_name='attribute',
            name='include_in_token',
            field=models.BooleanField(default=False, help_text='Should this be included in the token that is passed to the application?'),
        ),
        migrations.AlterField(
            model_name='attribute',
            name='query',
            field=models.TextField(blank=True, help_text='Use the SAML Attribute Values in a SQL query. Given an Attribute named SSO_ID, the correct\n                          syntax would be: \n\t\t SELECT username FROM users WHERE username  = %(SSO_ID)s \n                          \nThis syntax protects against SQL injection and is the only parameter substitution that should\n                          be used.', null=True),
        ),
        migrations.AlterField(
            model_name='attribute',
            name='query_parameters',
            field=models.ManyToManyField(blank=True, null=True, to='sp.Attribute'),
        ),
        migrations.AlterField(
            model_name='attribute',
            name='token_attribute_name',
            field=models.CharField(blank=True, help_text='The name to give the attribute value when adding it to the token that is passed to the application.', max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='certificate',
            name='certificate_info',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='certificate',
            name='expiration_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='entity',
            name='default_relay_state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='sp.relaystate'),
        ),
        migrations.AlterField(
            model_name='entity',
            name='entity_id',
            field=models.TextField(max_length=100),
        ),
        migrations.AlterField(
            model_name='entity',
            name='virtual_server_id',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.DeleteModel(
            name='AssertionAttribute',
        ),
        migrations.DeleteModel(
            name='TokenQuery',
        ),
        migrations.DeleteModel(
            name='TokenString',
        ),
        migrations.AddField(
            model_name='privatekey',
            name='entity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sp.entity'),
        ),
    ]
